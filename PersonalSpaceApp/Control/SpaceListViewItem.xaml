<ResourceDictionary xmlns:Control="clr-namespace:PersonalSpaceApp.Control"  
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
              xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
                     xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:PersonalSpaceApp.Control">

    <ImageBrush x:Key="brush_ItemSelected" ImageSource="pack://application:,,,/Image/对勾.png"/>
    <SolidColorBrush x:Key="CheckBoxFillNormal" Color="#F4F4F4"/>
    <SolidColorBrush x:Key="CheckBoxStroke" Color="#8E8F8F"/>

    <Style  x:Key="checkStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="{StaticResource CheckBoxFillNormal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
                        <BulletDecorator.Bullet>

                            <Border Name="bb" Opacity="0.4" Width="{TemplateBinding Width}" Background="{TemplateBinding Background}" Height="{TemplateBinding Height}">

                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter Property="Opacity" TargetName="bb" Value="0.4"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="bb" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SpaceListViewItemStyle1" TargetType="Control:SpaceListViewItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="145"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control:SpaceListViewItem">
                    <Grid Height="145" Background="Transparent" Width="150">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="32"/>
                        </Grid.RowDefinitions>
                        <!---->
                        <CheckBox Cursor="Hand"  IsChecked="{Binding IsItemChecked,Mode=TwoWay}" Background="{StaticResource brush_ItemSelected}"  Opacity="0" Style="{StaticResource checkStyle}" x:Name="chk" HorizontalAlignment="Left" VerticalAlignment="Top" Height="19" Width="19"  Margin="27,16,0,0">
                             <i:Interaction.Triggers>                                           
                        <i:EventTrigger  EventName="Checked" >
                            <ei:CallMethodAction  MethodName="Check_Selected"    TargetObject="{Binding }" />
                        </i:EventTrigger>            
                                 
                                   <i:EventTrigger  EventName="Unchecked" >
                            <ei:CallMethodAction  MethodName="Check_UnSelected"   TargetObject="{Binding }" />
                        </i:EventTrigger>
                        </i:Interaction.Triggers>
                        </CheckBox>
                        <Border  x:Name="border1" Grid.Row="0" BorderThickness="2" BorderBrush="Transparent" Height="98" Width="98" VerticalAlignment="Bottom">
                            <Image HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None" Source="{TemplateBinding Img_Brush}" RenderOptions.BitmapScalingMode="NearestNeighbor">
                                  <i:Interaction.Triggers>                                           
                      
                                   <i:EventTrigger  EventName="PreviewMouseLeftButtonDown" >
                            <ei:CallMethodAction  MethodName="OpenItem"     TargetObject="{Binding }" />
                        </i:EventTrigger>
                        </i:Interaction.Triggers>
                            </Image>
                        </Border>
                        
                        <Border Grid.Row="1"  >
                            <TextBox Cursor="Arrow" Margin="0,6,0,0" MinHeight="25" BorderThickness="0" Background="Transparent" VerticalContentAlignment="Center" x:Name="txtEdit" IsReadOnly="True"  BorderBrush="Transparent" VerticalAlignment="Top" HorizontalAlignment="Center" TextWrapping="Wrap" Text="{TemplateBinding Title}" >
                               <i:Interaction.Triggers>                                           
                      
                                   <i:EventTrigger  EventName="KeyDown" >
                            <ei:CallMethodAction  MethodName="Rename_KeyDown"     TargetObject="{Binding }" />
                        </i:EventTrigger>
                        </i:Interaction.Triggers>
                            </TextBox>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>                        
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1" TargetName="chk" />
                            <Setter Property="BorderBrush" Value="#3785dd" TargetName="border1" />
							
                        </Trigger>
                                                                         
                        <MultiTrigger  >
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="false"  SourceName="chk"/>
                                <Condition Property="IsChecked" Value="true" SourceName="chk"/>                                 
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" Value="1" TargetName="chk" />
                            <Setter Property="BorderBrush" Value="#3785dd" TargetName="border1" />   
							                           
                        </MultiTrigger>      
                        
                        
                         <MultiTrigger  >
                            <MultiTrigger.Conditions>
                                <Condition Property="IsRenameState" Value="true" />
                                <Condition Property="IsChecked" Value="true" SourceName="chk"/>                                 
                            </MultiTrigger.Conditions>
                            <Setter Property="IsReadOnly" Value="false" TargetName="txtEdit" />
                            <Setter Property="BorderBrush" Value="#f4c7ae" TargetName="txtEdit" />     
                               <Setter Property="BorderThickness" Value="1.5" TargetName="txtEdit" />   
                             <Setter Property="Cursor" Value="IBeam" TargetName="txtEdit"/>
                             <Setter Property="Background" Value="White" TargetName="txtEdit" />  
							  <Setter Property="SelectionBrush" Value="#FFFFC7AA"  TargetName="txtEdit" /> 
                        </MultiTrigger>  
                           <!--<Trigger Property="IsMouseOver" Value="false" SourceName="txtEdit" >
                          <Setter Property="BorderBrush" Value="transparent" TargetName="txtEdit" />  
                        </Trigger>-->
                        <!--<MultiTrigger  >
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" SourceName="txtEdit"  />
                                <Condition Property="IsChecked" Value="false" SourceName="chk"/>                                 
                            </MultiTrigger.Conditions>
                            <Setter Property="Cursor" Value="Arrow"/>
                            <Setter Property="BorderBrush" Value="transparent" TargetName="txtEdit" />
                          
                        </MultiTrigger>-->
                        </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>






    <!--图片按钮(文字居中,不带弧度)-->
    <Style  x:Key="btnSStyle" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="13.6"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Background" Value="#dcdcdc"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Opacity="{TemplateBinding Opacity}" Background="{TemplateBinding Background}" CornerRadius="3" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsMouseOver" Value="true"    >
                            <Setter Property="Opacity" Value="1" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <ImageBrush x:Key="brush_Check" ImageSource="pack://application:,,,/Image/brush_Check.png"/>
    <!--<ImageBrush x:Key="brush_CheckOver" ImageSource="pack://application:,,,/Image/brush_CheckOver.png"/>-->
    <ImageBrush x:Key="brush_CheckSelected" ImageSource="pack://application:,,,/Image/brush_CheckSelected.png"/>


    <ImageBrush x:Key="brush_Share" ImageSource="pack://application:,,,/Image/brush_Share.png"/>
    <ImageBrush x:Key="brush_Recycle" ImageSource="pack://application:,,,/Image/brush_Recycle.png"/>
    <ImageBrush x:Key="brush_Download" ImageSource="pack://application:,,,/Image/brush_Download.png"/>

    <ImageBrush x:Key="button_Share" ImageSource="pack://application:,,,/Image/button_Share.png"/>
    <ImageBrush x:Key="button_Dropdown" ImageSource="pack://application:,,,/Image/button_Dropdown.png"/>
    <ImageBrush x:Key="button_Download" ImageSource="pack://application:,,,/Image/button_Download.png"/>

    <Style  x:Key="checkStyle2" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="{StaticResource CheckBoxFillNormal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
        <Setter Property="BorderThickness" Value="1"/>
       
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
                        <BulletDecorator.Bullet>
                            <Border x:Name="border"  Width="16" Background="{TemplateBinding Background}" Height="{TemplateBinding Height}">
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background"  Value="{StaticResource brush_CheckSelected}" TargetName="border" />
                        </Trigger>
                        <MultiTrigger  >
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"  />
                                <Condition Property="IsChecked" Value="false" />
                            </MultiTrigger.Conditions>
                            <!--<Setter Property="Background"  Value="{StaticResource  brush_CheckOver}" TargetName="border" />-->
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="15,0,0,0"/>

        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
    </Style>
    <Style x:Key="SpaceListViewItemStyle2" TargetType="Control:SpaceListViewItem">
        <Setter Property="Width" Value="{Binding Path=Width,ElementName=listView,Mode=TwoWay}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="41"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="0,-1,0,0"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control:SpaceListViewItem">
                    <Border x:Name="bordMain" BorderThickness="0,1,0,1" BorderBrush="Transparent" Background="Transparent">
                        <Grid Height="{TemplateBinding Height}" Background="Transparent" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="341"/>
                                <ColumnDefinition Width="110"/>
                                <ColumnDefinition Width="150"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Horizontal" Background="Transparent">
                                <i:Interaction.Triggers>

                                    <i:EventTrigger  EventName="MouseLeftButtonDown" >
                                        <ei:CallMethodAction  MethodName="Cancel_ReName"     TargetObject="{Binding }" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <!---->
								<CheckBox Cursor="Hand" IsChecked="{Binding IsItemChecked,Mode=TwoWay}" Style="{StaticResource checkStyle2}"  Background="{StaticResource brush_Check}" RenderOptions.BitmapScalingMode="NearestNeighbor" UseLayoutRounding="True" Opacity="1"  Margin="18,0" x:Name="chk" HorizontalAlignment="Left" VerticalAlignment="Center" Height="16" Width="16"  >
									<i:Interaction.Triggers>                                           
										<i:EventTrigger  EventName="Checked" >
											<ei:CallMethodAction  MethodName="Check_Selected"    TargetObject="{Binding }" />
										</i:EventTrigger>            
                                 
										<i:EventTrigger  EventName="Unchecked" >
											<ei:CallMethodAction  MethodName="Check_UnSelected"   TargetObject="{Binding }" />
										</i:EventTrigger>
									</i:Interaction.Triggers>
								</CheckBox>
								<Border  x:Name="border1"   >
									<Image Margin="0" Width="16" Height="16"  Source="{TemplateBinding Img_Small_Brush}" RenderOptions.BitmapScalingMode="NearestNeighbor" UseLayoutRounding="True">
										<i:Interaction.Triggers>
											<i:EventTrigger  EventName="PreviewMouseLeftButtonDown" >
												<ei:CallMethodAction  MethodName="OpenItem" TargetObject="{Binding }" />
											</i:EventTrigger>
										</i:Interaction.Triggers>
									</Image>
								</Border>
                        
								<Border>
									<TextBox Cursor="Arrow" Margin="5,0,0,0" FontSize="13" BorderThickness="0" x:Name="txtEdit" IsReadOnly="{Binding Is_ReadOnly}"  Background="Transparent" BorderBrush="Transparent" VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" TextWrapping="Wrap" Text="{TemplateBinding Title}" >
										<i:Interaction.Triggers>                                                                 
											<i:EventTrigger  EventName="KeyDown" >
												<ei:CallMethodAction  MethodName="Rename_KeyDown"     TargetObject="{Binding }" />
											</i:EventTrigger>
											<i:EventTrigger  EventName="PreviewMouseLeftButtonDown" >
												<ei:CallMethodAction  MethodName="OpenItem"     TargetObject="{Binding }" />
											</i:EventTrigger>
										</i:Interaction.Triggers>
									</TextBox>
                           
								</Border>
                             </StackPanel>
                            
                            <Border x:Name="borderIco" HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="Collapsed" Grid.Column="1">
                                <Grid>
                                <StackPanel Orientation="Horizontal">
                                    <Button Style="{StaticResource btnSStyle}" Margin="0,0,0,0" Background="{StaticResource  button_Share}" Opacity="0.8" Width="17" Height="17">
                                         <i:Interaction.Triggers>                                                                 
                                   <i:EventTrigger  EventName="Click" >
                             <ei:CallMethodAction  MethodName="Share_Click"     TargetObject="{Binding }" />
                                         </i:EventTrigger>
                                         </i:Interaction.Triggers>
                                    </Button>
                                    <Button Style="{StaticResource btnSStyle}" Margin="10,0,0,0" Background="{StaticResource  button_Download}" Opacity="0.8" Width="18" Height="18">
                                         <i:Interaction.Triggers>                                                                 
                                   <i:EventTrigger  EventName="Click" >
                             <ei:CallMethodAction  MethodName="Download_Click"     TargetObject="{Binding }" />
                                         </i:EventTrigger>
                                         </i:Interaction.Triggers>
                                    </Button>                                  
                                    <Button x:Name="btn_Dropdown" Style="{StaticResource btnSStyle}" Margin="10,0,0,0"  Background="{StaticResource button_Dropdown}" Opacity="0.8" Width="18" Height="18">
                                         <i:Interaction.Triggers>                                                                 
                                   <i:EventTrigger  EventName="Click" >
                             <ei:CallMethodAction   MethodName="Open_Operation_Panel"    TargetObject="{Binding }" /> 
                                         </i:EventTrigger>
                                         </i:Interaction.Triggers>
                                    </Button>
                                </StackPanel>
                                    <!--<Grid Panel.ZIndex="20" Background="#ffffff" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="22,0,0,-78">
                                        <StackPanel Orientation="Vertical">
                                            <Border Width="87" Height="30" BorderThickness="1,1,1,0" BorderBrush="#d8d8d8">
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="移动到" Foreground="#717171" FontFamily="Microsoft YaHei" FontSize="13"></TextBlock>
                                            </Border>
                                            <Border Width="87" Height="30" BorderThickness="1,1,1,0" BorderBrush="#d8d8d8">
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="删除" Foreground="#717171" FontFamily="Microsoft YaHei" FontSize="13"></TextBlock>
                                            </Border>
                                            <Border Width="87" Height="30" BorderThickness="1,1,1,0" BorderBrush="#d8d8d8">
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="重命名" Foreground="#717171" FontFamily="Microsoft YaHei" FontSize="13"></TextBlock>
                                            </Border>
                                        </StackPanel>
                                    </Grid>-->
                                <Popup AllowsTransparency="True" PopupAnimation="Slide" PlacementTarget="{Binding ElementName=btn_Dropdown}" StaysOpen="False" IsOpen="{Binding Is_Open}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Border Grid.RowSpan="3" Background="#ffffff" BorderThickness="1" BorderBrush="#d8d8d8"></Border>
                                        <Border Grid.Row="0" x:Name="border_MoveTo" Background="Transparent" Width="87" Height="30" BorderThickness="0" >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger  EventName="PreviewMouseLeftButtonDown" >
                                                    <ei:CallMethodAction  MethodName="Move_Click"     TargetObject="{Binding }" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="移动到" Foreground="#434343" FontFamily="Microsoft YaHei" FontSize="13"></TextBlock>
                                        </Border>
                                        <Border Grid.Row="1" x:Name="border_Delete" Background="Transparent" Width="87" Height="30" BorderThickness="0" >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger  EventName="PreviewMouseLeftButtonDown" >
                                                    <ei:CallMethodAction  MethodName="Delete_Click"     TargetObject="{Binding }" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="删除" Foreground="#434343" FontFamily="Microsoft YaHei" FontSize="13"></TextBlock>
                                        </Border>
                                        <Border Grid.Row="2" x:Name="border_Rename" Background="Transparent" Width="87" Height="30" BorderThickness="0" >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger  EventName="PreviewMouseLeftButtonDown" >
                                                    <ei:CallMethodAction  MethodName="ReName_Click"     TargetObject="{Binding }" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="重命名" Foreground="#434343" FontFamily="Microsoft YaHei" FontSize="13"></TextBlock>
                                        </Border>
                                    </Grid>

                                </Popup>
                        </Grid>
                    </Border>

                    <Border Grid.Column="2" Background="Transparent">
                        <i:Interaction.Triggers>

                            <i:EventTrigger  EventName="MouseLeftButtonDown" >
                                <ei:CallMethodAction  MethodName="Cancel_ReName"     TargetObject="{Binding }" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" Text="{TemplateBinding SizeDisplay}" Margin="12,0,0,0"  Foreground="#5a5a5a">
									<i:Interaction.Triggers>                                           
                      
										<i:EventTrigger  EventName="PreviewMouseLeftButtonDown" >
											<ei:CallMethodAction  MethodName="OpenItem"     TargetObject="{Binding }" />
										</i:EventTrigger>
									</i:Interaction.Triggers>
                        </TextBlock>
                    </Border>
                    <Border Grid.Column="3"  Background="Transparent">
                        <i:Interaction.Triggers>

                            <i:EventTrigger  EventName="MouseLeftButtonDown" >
                                <ei:CallMethodAction  MethodName="Cancel_ReName"     TargetObject="{Binding }" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" Text="{Binding UpdateTime,StringFormat='yyyy-MM-dd HH:mm:ss'}" Margin="12,0,0,0" Foreground="#5a5a5a">
									<i:Interaction.Triggers>                                           
                      
										<i:EventTrigger  EventName="PreviewMouseLeftButtonDown" >
											<ei:CallMethodAction  MethodName="OpenItem"     TargetObject="{Binding }" />
										</i:EventTrigger>
									</i:Interaction.Triggers>
                        </TextBlock>
                    </Border>
                    </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger  >
                            <MultiTrigger.Conditions>
                                <Condition Property="IsRenameState" Value="true" />
                                <Condition Property="IsChecked" Value="true" SourceName="chk"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="IsReadOnly" Value="false" TargetName="txtEdit" />
                            <Setter Property="BorderBrush" Value="Silver" TargetName="txtEdit" />
                            <Setter Property="BorderThickness" Value="1" TargetName="txtEdit" />
                            <Setter Property="Cursor" Value="IBeam" TargetName="txtEdit"/>
                            <Setter Property="Background" Value="White" TargetName="txtEdit" />
                        </MultiTrigger>


                        <MultiTrigger  >
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsChecked" Value="false" SourceName="chk"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#fdf2ec" TargetName="bordMain" />
                            <Setter Property="BorderThickness" Value="0,1,0,1" TargetName="bordMain" />
                            <Setter Property="BorderBrush" Value="#d7d8d9" TargetName="bordMain" />
                            <!-- BorderThickness="0,0,0,1" BorderBrush="#c9cacb" -->
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True" SourceName="chk">
                            <Setter Property="Background" Value="#fdf2ec" TargetName="bordMain" />
                            <Setter Property="BorderThickness" Value="0,1,0,1" TargetName="bordMain" />
                            <Setter Property="BorderBrush" Value="#d7d8d9" TargetName="bordMain" />
                        </Trigger>

                        <MultiTrigger  >
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsShowOperationIcon" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="borderIco"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="true" SourceName="border_MoveTo">
                            <Setter Property="Background" Value="#f9bd97" TargetName="border_MoveTo"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true" SourceName="border_Delete">
                            <Setter Property="Background" Value="#f9bd97" TargetName="border_Delete"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true" SourceName="border_Rename">
                            <Setter Property="Background" Value="#f9bd97" TargetName="border_Rename"/>
                        </Trigger>

                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                
                            </MultiTrigger.Conditions>
                        </MultiTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>

