<ResourceDictionary 
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
     xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
  
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
              xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
                    xmlns:local="clr-namespace:ConferenceCommon.WPFHelper">
	

			<!--退出登录按钮鼠标滑动渐变-->
        <Storyboard x:Key="Storyboard_CancelButton">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                <EasingColorKeyFrame KeyTime="0" Value="#FF075896"/>
                <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF075896"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
		<!--退出登录按钮鼠标左键点击渐变-->
        <Storyboard x:Key="Storyboard_CancelButtonClick">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                <EasingColorKeyFrame KeyTime="0" Value="#05375d"/>
                <!--<EasingColorKeyFrame KeyTime="0:0:0.1" Value="#05375d"/>-->
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
		<!--最小化按钮鼠标滑动渐变-->
        <Storyboard x:Key="Storyboard_MinimizeButton">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border1">
                <EasingColorKeyFrame KeyTime="0" Value="#FF05477A"/>
                <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF075896"/>
            </ColorAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border1">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image1">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
		<!--最小化按钮鼠标左键点击渐变-->
        <Storyboard x:Key="Storyboard_MinimizeButtonClick">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border1">
                <EasingColorKeyFrame KeyTime="0" Value="#05375d"/>
                <!--<EasingColorKeyFrame KeyTime="0:0:0.1" Value="#05375d"/>-->
            </ColorAnimationUsingKeyFrames>
		</Storyboard>
		<!--最大化按钮鼠标滑动渐变-->
        <Storyboard x:Key="Storyboard_MaximizingButton">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border2">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image2">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border2">
                <EasingColorKeyFrame KeyTime="0" Value="#FF05375D"/>
                <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF075896"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
		<!--最大化按钮鼠标左键点击渐变-->
        <Storyboard x:Key="Storyboard_MaximizingButtonClick">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border2">
                <EasingColorKeyFrame KeyTime="0" Value="#05375d"/>
                <!--<EasingColorKeyFrame KeyTime="0:0:0.1" Value="#05375d"/>-->
            </ColorAnimationUsingKeyFrames>
		</Storyboard>
		<!--窗口关闭按钮鼠标滑动渐变-->
        <Storyboard x:Key="Storyboard_CloseButton">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border3">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image3">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>



    <!--图片按钮(文字居中,不带弧度)-->
    <Style  x:Key="btnCloseStyle" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="13.6"/>
        <Setter Property="FontFamily" Value="微软雅黑"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Background" Value="#dcdcdc"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  Background="{TemplateBinding Background}" CornerRadius="3" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsMouseOver" Value="true"    >
                            <Setter Property="Background" Value="#fc7410"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="BorderBrush" Value="#e06205"/>
                        </Trigger>
                        <Trigger  Property="IsMouseOver" Value="false"  >
                            <Setter Property="Background" Value="White"/>
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="BorderBrush" Value="#b3b2b2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="windowStyle" TargetType="local:WindowOperationBase">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="FontFamily" Value="微软雅黑"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="Silver"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="local:WindowOperationBase">
                    <!--<Border 
        Background="{TemplateBinding Background}" 
        BorderBrush="{TemplateBinding BorderBrush}" 
        BorderThickness="{TemplateBinding BorderThickness}"
        >
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="0.93*"/>-->
                    <!--<RowDefinition Height="Auto"/>-->
                    <!--</Grid.RowDefinitions>
                           
                            <ContentPresenter 
                Grid.ColumnSpan="2" 
                Grid.Row="1" 
                Content="{TemplateBinding Content}" 
                ContentTemplate="{TemplateBinding ContentTemplate}"
                />
                            <ResizeGrip 
                HorizontalAlignment="Right" 
                x:Name="WindowResizeGrip" 
                VerticalAlignment="Bottom" 
                IsTabStop="False" 
                Visibility="Collapsed" 
                Grid.Column="1" 
                Grid.Row="2"
                />
                            <Grid >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Border   Grid.Row="0"  BorderBrush="Silver"  BorderThickness="0,0,0,1">
                                    <Border.Background>
                                        <SolidColorBrush Color="#FFBBC2C7" Opacity="0.5"/>
                                    </Border.Background>
                                    <Grid>
                                        <TextBlock Text="{Binding Title}" FontSize="14" Foreground="Black" VerticalAlignment="Center" Margin="7,0,0,0"/>

                                        <Button Style="{StaticResource btnCloseStyle}" HorizontalAlignment="Right" Margin="0,0,5,0" VerticalAlignment="Center" Content="关闭">

                                            <i:Interaction.Triggers>-->
                    <!--<i:EventTrigger EventName="MouseDoubleClick">
                                                    <ei:ChangePropertyAction TargetObject="{Binding ElementName=textBox}" PropertyName="IsReadOnly" Value="False"/>
                                                </i:EventTrigger>
                                                <i:EventTrigger EventName="LostFocus">
                                                    <ei:ChangePropertyAction TargetObject="{Binding ElementName=textBox}" PropertyName="IsReadOnly" Value="True"/>
                                                    <i:InvokeCommandAction Command="{Binding DataContext.UpdateTaskCommand,RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding Path=Content,RelativeSource={ RelativeSource Mode=TemplatedParent}}"/>
                                                </i:EventTrigger>-->

                    <!--<i:EventTrigger  EventName="PreviewMouseLeftButtonDown" >
                                                    <ei:CallMethodAction  MethodName="CloseDown"   TargetObject="{Binding }" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                    </Grid>
                                </Border>

                                <Border Grid.Row="1" x:Name="borContent"/>
                            </Grid>-->
                    <!--<StatusBar Height="20" Grid.ColumnSpan="2" Grid.Row="2"/>-->
                    <!--</Grid>
                    </Border>-->







                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="26" ></RowDefinition>
                            <RowDefinition ></RowDefinition>
                            <RowDefinition Height="5"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5"></ColumnDefinition>
                            <ColumnDefinition ></ColumnDefinition>
                            <ColumnDefinition Width="5"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
						<Grid.Triggers>
							<EventTrigger RoutedEvent="FrameworkElement.Loaded">

            <StopStoryboard BeginStoryboardName="Storyboard_MinimizeButton_BeginStoryboard"/>
            <StopStoryboard BeginStoryboardName="Storyboard_MaximizingButton_BeginStoryboard"/>
            <StopStoryboard BeginStoryboardName="Storyboard_CloseButton_BeginStoryboard"/>

            <StopStoryboard BeginStoryboardName="Storyboard_MinimizeButtonClick_BeginStoryboard"/>
            <StopStoryboard BeginStoryboardName="Storyboard_MaximizingButtonClick_BeginStoryboard"/>
        </EventTrigger>

		<!--最小化按钮鼠标滑动渐变-->
        <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="gridMinimizeButton">
            <BeginStoryboard x:Name="Storyboard_MinimizeButton_BeginStoryboard" Storyboard="{StaticResource Storyboard_MinimizeButton}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="gridMinimizeButton">
            <StopStoryboard BeginStoryboardName="Storyboard_MinimizeButton_BeginStoryboard"/>

        </EventTrigger>
		<!--最小化按钮鼠标点击渐变-->
		<EventTrigger RoutedEvent="UIElement.MouseLeftButtonDown" SourceName="gridMinimizeButton">
            <BeginStoryboard x:Name="Storyboard_MinimizeButtonClick_BeginStoryboard" Storyboard="{StaticResource Storyboard_MinimizeButtonClick}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseLeftButtonUp" SourceName="gridMinimizeButton">
            <StopStoryboard BeginStoryboardName="Storyboard_MinimizeButtonClick_BeginStoryboard"/>
        </EventTrigger>
		<!--最大化按钮鼠标滑动渐变-->
        <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="gridMaximizingButton">
            <BeginStoryboard x:Name="Storyboard_MaximizingButton_BeginStoryboard" Storyboard="{StaticResource Storyboard_MaximizingButton}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="gridMaximizingButton">
            <StopStoryboard BeginStoryboardName="Storyboard_MaximizingButton_BeginStoryboard"/>

        </EventTrigger>
		<!--最小化按钮鼠标点击渐变-->
		<EventTrigger RoutedEvent="UIElement.MouseLeftButtonDown" SourceName="gridMaximizingButton">
            <BeginStoryboard x:Name="Storyboard_MaximizingButtonClick_BeginStoryboard" Storyboard="{StaticResource Storyboard_MaximizingButtonClick}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseLeftButtonUp" SourceName="gridMaximizingButton">
            <StopStoryboard BeginStoryboardName="Storyboard_MaximizingButtonClick_BeginStoryboard"/>
        </EventTrigger>
		<!--窗口关闭按钮鼠标滑动渐变-->
        <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="gridCloseButton">
            <BeginStoryboard x:Name="Storyboard_CloseButton_BeginStoryboard" Storyboard="{StaticResource Storyboard_CloseButton}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="gridCloseButton">
            <StopStoryboard BeginStoryboardName="Storyboard_CloseButton_BeginStoryboard"/>

        </EventTrigger>
						</Grid.Triggers>
                        <Border x:Name="borderTopLeft" Grid.Column="0" Grid.Row="0" Panel.ZIndex="10">
                            <Border.Background>
                                <ImageBrush ImageSource="pack://application:,,,/Image/窗上左.png" Stretch="None"/>
                            </Border.Background>
                        </Border>
                        <Border Grid.Column="1" Grid.Row="0" Panel.ZIndex="10">
                            <Border.Background>
                                <ImageBrush ImageSource="pack://application:,,,/Image/窗上中.png"/>
                            </Border.Background>
                            <Grid Width="90" Height="19" HorizontalAlignment="Right" Margin="0,3,4,0" VerticalAlignment="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition Width="30"/>
                                </Grid.ColumnDefinitions>

                                <Grid x:Name="gridMinimizeButton"  Grid.Column="0" Panel.ZIndex="3"  ToolTip="最小化">
                                    <Border x:Name="border1" Background="#05477a" Opacity="0" />
                                    <Image x:Name="image1" Source="pack://application:,,,/Image/最小化.png" Stretch="None" Opacity="0.5" VerticalAlignment="Top" Margin="0,12,0,0" Panel.ZIndex="1"/>

                                </Grid>
                                <Grid x:Name="gridMaximizingButton" Grid.Column="1" Panel.ZIndex="3">
                                    <Border x:Name="border2"  Background="#05375d" Opacity="0" />
                                    <Image x:Name="image2" Source="pack://application:,,,/Image/小窗.png" Stretch="None" Opacity="0.5" VerticalAlignment="Top" Margin="0,3,0,0" Panel.ZIndex="1"/>

                                </Grid>
                                <Grid x:Name="gridCloseButton" Grid.Column="2" Panel.ZIndex="3"  ToolTip="关闭">
                                    <Border x:Name="border3"  Background="#b2104e" Opacity="0" />
                                    <Image x:Name="image3" Source="pack://application:,,,/Image/关闭窗口.png" Stretch="None" Opacity="0.5" VerticalAlignment="Top" Margin="0,3,0,0" Panel.ZIndex="1"/>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDoubleClick">
                                                    <ei:ChangePropertyAction TargetObject="{Binding ElementName=textBox}" PropertyName="IsReadOnly" Value="False"/>
                                                </i:EventTrigger>
                                                <i:EventTrigger EventName="LostFocus">
                                                    <ei:ChangePropertyAction TargetObject="{Binding ElementName=textBox}" PropertyName="IsReadOnly" Value="True"/>
                                                    <i:InvokeCommandAction Command="{Binding DataContext.UpdateTaskCommand,RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding Path=Content,RelativeSource={ RelativeSource Mode=TemplatedParent}}"/>
                                                </i:EventTrigger>

                                        <i:EventTrigger  EventName="PreviewMouseLeftButtonDown" >
                                            <ei:CallMethodAction  MethodName="CloseDown"   TargetObject="{Binding }" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                </Grid>
                            </Grid>
                        </Border>






                        <ContentPresenter 
                Grid.Column="1" 
                Grid.Row="1" 
				
                Content="{TemplateBinding Content}" 
                ContentTemplate="{TemplateBinding ContentTemplate}"
                />

                        <ResizeGrip 
                HorizontalAlignment="Right" 
                x:Name="WindowResizeGrip" 
                VerticalAlignment="Bottom" 
                IsTabStop="False" 
                Visibility="Collapsed" 
                Grid.Column="1" 
                Grid.Row="1"
                />



                        <Border x:Name="borderTopRight" Grid.Column="2" Grid.Row="0" Panel.ZIndex="10">
                            <Border.Background>
                                <ImageBrush ImageSource="pack://application:,,,/Image/窗上右.png" Stretch="None"/>
                            </Border.Background>
                        </Border>
                        <Border x:Name="borderRight" Grid.Column="2" Grid.Row="1" Panel.ZIndex="10">
                            <Border.Background>
                                <ImageBrush ImageSource="pack://application:,,,/Image/窗右.png"/>
                            </Border.Background>
                        </Border>
                        <Border x:Name="borderBottomLeft" Grid.Column="0" Grid.Row="2" Panel.ZIndex="10">
                            <Border.Background>
                                <ImageBrush ImageSource="pack://application:,,,/Image/窗下左.png" Stretch="None"/>
                            </Border.Background>
                        </Border>
                        <Border x:Name="borderBottom" Grid.Column="1" Grid.Row="2" Panel.ZIndex="10">
                            <Border.Background>
                                <ImageBrush ImageSource="pack://application:,,,/Image/窗下中.png"/>
                            </Border.Background>
                        </Border>
                        <Border x:Name="borderBottomRight" Grid.Column="2" Grid.Row="2" Panel.ZIndex="10">
                            <Border.Background>
                                <ImageBrush ImageSource="pack://application:,,,/Image/窗下右.png" Stretch="None"/>
                            </Border.Background>
                        </Border>
                        <Border x:Name="borderLeft" Grid.Column="0" Grid.Row="1" Panel.ZIndex="10">
                            <Border.Background>
                                <ImageBrush ImageSource="pack://application:,,,/Image/窗左.png"/>
                            </Border.Background>
                        </Border>

                    </Grid>










                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                                <Condition Property="WindowState" Value="Normal"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
                        </MultiTrigger>

                        <!--<Trigger Property="IsMouseOver" Value="true" SourceName="gridCancelButton">
                            <Setter Property="Background" Value="Black" TargetName="gridCancelButton"/>
                        </Trigger>

                        <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown"  SourceName="gridCancelButton">
                            <BeginStoryboard   >
                                <Storyboard  >
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                        <EasingColorKeyFrame KeyTime="0" Value="#FF075896"/>
                                        <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF075896"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>

