//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConferenceModel.FileSyncAppPoolWebService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FileSyncAppPoolWebService.FileSyncAppPoolWebserviceSoap")]
    public interface FileSyncAppPoolWebserviceSoap {
        
        // CODEGEN: 参数“bytesStr”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FillSyncServiceData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ConferenceModel.FileSyncAppPoolWebService.FillSyncServiceDataResponse FillSyncServiceData(ConferenceModel.FileSyncAppPoolWebService.FillSyncServiceDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/FillSyncServiceData", ReplyAction="*")]
        System.IAsyncResult BeginFillSyncServiceData(ConferenceModel.FileSyncAppPoolWebService.FillSyncServiceDataRequest request, System.AsyncCallback callback, object asyncState);
        
        ConferenceModel.FileSyncAppPoolWebService.FillSyncServiceDataResponse EndFillSyncServiceData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSyncServiceData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ConferenceModel.FileSyncAppPoolWebService.FileSyncAppEntity GetSyncServiceData(int conferenceID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetSyncServiceData", ReplyAction="*")]
        System.IAsyncResult BeginGetSyncServiceData(int conferenceID, System.AsyncCallback callback, object asyncState);
        
        ConferenceModel.FileSyncAppPoolWebService.FileSyncAppEntity EndGetSyncServiceData(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FillSyncServiceData", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FillSyncServiceDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int conferenceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] bytesStr;
        
        public FillSyncServiceDataRequest() {
        }
        
        public FillSyncServiceDataRequest(int conferenceID, byte[] bytesStr) {
            this.conferenceID = conferenceID;
            this.bytesStr = bytesStr;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FillSyncServiceDataResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FillSyncServiceDataResponse {
        
        public FillSyncServiceDataResponse() {
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FileSyncAppEntity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte[] imgBytesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=0)]
        public byte[] ImgBytes {
            get {
                return this.imgBytesField;
            }
            set {
                this.imgBytesField = value;
                this.RaisePropertyChanged("ImgBytes");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface FileSyncAppPoolWebserviceSoapChannel : ConferenceModel.FileSyncAppPoolWebService.FileSyncAppPoolWebserviceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSyncServiceDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSyncServiceDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ConferenceModel.FileSyncAppPoolWebService.FileSyncAppEntity Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ConferenceModel.FileSyncAppPoolWebService.FileSyncAppEntity)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileSyncAppPoolWebserviceSoapClient : System.ServiceModel.ClientBase<ConferenceModel.FileSyncAppPoolWebService.FileSyncAppPoolWebserviceSoap>, ConferenceModel.FileSyncAppPoolWebService.FileSyncAppPoolWebserviceSoap {
        
        private BeginOperationDelegate onBeginFillSyncServiceDataDelegate;
        
        private EndOperationDelegate onEndFillSyncServiceDataDelegate;
        
        private System.Threading.SendOrPostCallback onFillSyncServiceDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSyncServiceDataDelegate;
        
        private EndOperationDelegate onEndGetSyncServiceDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetSyncServiceDataCompletedDelegate;
        
        public FileSyncAppPoolWebserviceSoapClient() {
        }
        
        public FileSyncAppPoolWebserviceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FileSyncAppPoolWebserviceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileSyncAppPoolWebserviceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileSyncAppPoolWebserviceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> FillSyncServiceDataCompleted;
        
        public event System.EventHandler<GetSyncServiceDataCompletedEventArgs> GetSyncServiceDataCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConferenceModel.FileSyncAppPoolWebService.FillSyncServiceDataResponse ConferenceModel.FileSyncAppPoolWebService.FileSyncAppPoolWebserviceSoap.FillSyncServiceData(ConferenceModel.FileSyncAppPoolWebService.FillSyncServiceDataRequest request) {
            return base.Channel.FillSyncServiceData(request);
        }
        
        public void FillSyncServiceData(int conferenceID, byte[] bytesStr) {
            ConferenceModel.FileSyncAppPoolWebService.FillSyncServiceDataRequest inValue = new ConferenceModel.FileSyncAppPoolWebService.FillSyncServiceDataRequest();
            inValue.conferenceID = conferenceID;
            inValue.bytesStr = bytesStr;
            ConferenceModel.FileSyncAppPoolWebService.FillSyncServiceDataResponse retVal = ((ConferenceModel.FileSyncAppPoolWebService.FileSyncAppPoolWebserviceSoap)(this)).FillSyncServiceData(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ConferenceModel.FileSyncAppPoolWebService.FileSyncAppPoolWebserviceSoap.BeginFillSyncServiceData(ConferenceModel.FileSyncAppPoolWebService.FillSyncServiceDataRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFillSyncServiceData(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFillSyncServiceData(int conferenceID, byte[] bytesStr, System.AsyncCallback callback, object asyncState) {
            ConferenceModel.FileSyncAppPoolWebService.FillSyncServiceDataRequest inValue = new ConferenceModel.FileSyncAppPoolWebService.FillSyncServiceDataRequest();
            inValue.conferenceID = conferenceID;
            inValue.bytesStr = bytesStr;
            return ((ConferenceModel.FileSyncAppPoolWebService.FileSyncAppPoolWebserviceSoap)(this)).BeginFillSyncServiceData(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConferenceModel.FileSyncAppPoolWebService.FillSyncServiceDataResponse ConferenceModel.FileSyncAppPoolWebService.FileSyncAppPoolWebserviceSoap.EndFillSyncServiceData(System.IAsyncResult result) {
            return base.Channel.EndFillSyncServiceData(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndFillSyncServiceData(System.IAsyncResult result) {
            ConferenceModel.FileSyncAppPoolWebService.FillSyncServiceDataResponse retVal = ((ConferenceModel.FileSyncAppPoolWebService.FileSyncAppPoolWebserviceSoap)(this)).EndFillSyncServiceData(result);
        }
        
        private System.IAsyncResult OnBeginFillSyncServiceData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int conferenceID = ((int)(inValues[0]));
            byte[] bytesStr = ((byte[])(inValues[1]));
            return this.BeginFillSyncServiceData(conferenceID, bytesStr, callback, asyncState);
        }
        
        private object[] OnEndFillSyncServiceData(System.IAsyncResult result) {
            this.EndFillSyncServiceData(result);
            return null;
        }
        
        private void OnFillSyncServiceDataCompleted(object state) {
            if ((this.FillSyncServiceDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FillSyncServiceDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FillSyncServiceDataAsync(int conferenceID, byte[] bytesStr) {
            this.FillSyncServiceDataAsync(conferenceID, bytesStr, null);
        }
        
        public void FillSyncServiceDataAsync(int conferenceID, byte[] bytesStr, object userState) {
            if ((this.onBeginFillSyncServiceDataDelegate == null)) {
                this.onBeginFillSyncServiceDataDelegate = new BeginOperationDelegate(this.OnBeginFillSyncServiceData);
            }
            if ((this.onEndFillSyncServiceDataDelegate == null)) {
                this.onEndFillSyncServiceDataDelegate = new EndOperationDelegate(this.OnEndFillSyncServiceData);
            }
            if ((this.onFillSyncServiceDataCompletedDelegate == null)) {
                this.onFillSyncServiceDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFillSyncServiceDataCompleted);
            }
            base.InvokeAsync(this.onBeginFillSyncServiceDataDelegate, new object[] {
                        conferenceID,
                        bytesStr}, this.onEndFillSyncServiceDataDelegate, this.onFillSyncServiceDataCompletedDelegate, userState);
        }
        
        public ConferenceModel.FileSyncAppPoolWebService.FileSyncAppEntity GetSyncServiceData(int conferenceID) {
            return base.Channel.GetSyncServiceData(conferenceID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSyncServiceData(int conferenceID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSyncServiceData(conferenceID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ConferenceModel.FileSyncAppPoolWebService.FileSyncAppEntity EndGetSyncServiceData(System.IAsyncResult result) {
            return base.Channel.EndGetSyncServiceData(result);
        }
        
        private System.IAsyncResult OnBeginGetSyncServiceData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int conferenceID = ((int)(inValues[0]));
            return this.BeginGetSyncServiceData(conferenceID, callback, asyncState);
        }
        
        private object[] OnEndGetSyncServiceData(System.IAsyncResult result) {
            ConferenceModel.FileSyncAppPoolWebService.FileSyncAppEntity retVal = this.EndGetSyncServiceData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSyncServiceDataCompleted(object state) {
            if ((this.GetSyncServiceDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSyncServiceDataCompleted(this, new GetSyncServiceDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSyncServiceDataAsync(int conferenceID) {
            this.GetSyncServiceDataAsync(conferenceID, null);
        }
        
        public void GetSyncServiceDataAsync(int conferenceID, object userState) {
            if ((this.onBeginGetSyncServiceDataDelegate == null)) {
                this.onBeginGetSyncServiceDataDelegate = new BeginOperationDelegate(this.OnBeginGetSyncServiceData);
            }
            if ((this.onEndGetSyncServiceDataDelegate == null)) {
                this.onEndGetSyncServiceDataDelegate = new EndOperationDelegate(this.OnEndGetSyncServiceData);
            }
            if ((this.onGetSyncServiceDataCompletedDelegate == null)) {
                this.onGetSyncServiceDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSyncServiceDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetSyncServiceDataDelegate, new object[] {
                        conferenceID}, this.onEndGetSyncServiceDataDelegate, this.onGetSyncServiceDataCompletedDelegate, userState);
        }
    }
}
