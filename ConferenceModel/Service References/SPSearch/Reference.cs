//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConferenceModel.SPSearch {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SPSearch.ISearchService")]
    public interface ISearchService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/SearchFiles", ReplyAction="http://tempuri.org/ISearchService/SearchFilesResponse")]
        string SearchFiles(string url, string searchPath, string keyWord);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISearchService/SearchFiles", ReplyAction="http://tempuri.org/ISearchService/SearchFilesResponse")]
        System.IAsyncResult BeginSearchFiles(string url, string searchPath, string keyWord, System.AsyncCallback callback, object asyncState);
        
        string EndSearchFiles(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISearchServiceChannel : ConferenceModel.SPSearch.ISearchService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchServiceClient : System.ServiceModel.ClientBase<ConferenceModel.SPSearch.ISearchService>, ConferenceModel.SPSearch.ISearchService {
        
        private BeginOperationDelegate onBeginSearchFilesDelegate;
        
        private EndOperationDelegate onEndSearchFilesDelegate;
        
        private System.Threading.SendOrPostCallback onSearchFilesCompletedDelegate;
        
        public SearchServiceClient() {
        }
        
        public SearchServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SearchServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SearchServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SearchServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<SearchFilesCompletedEventArgs> SearchFilesCompleted;
        
        public string SearchFiles(string url, string searchPath, string keyWord) {
            return base.Channel.SearchFiles(url, searchPath, keyWord);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSearchFiles(string url, string searchPath, string keyWord, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchFiles(url, searchPath, keyWord, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSearchFiles(System.IAsyncResult result) {
            return base.Channel.EndSearchFiles(result);
        }
        
        private System.IAsyncResult OnBeginSearchFiles(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string url = ((string)(inValues[0]));
            string searchPath = ((string)(inValues[1]));
            string keyWord = ((string)(inValues[2]));
            return this.BeginSearchFiles(url, searchPath, keyWord, callback, asyncState);
        }
        
        private object[] OnEndSearchFiles(System.IAsyncResult result) {
            string retVal = this.EndSearchFiles(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchFilesCompleted(object state) {
            if ((this.SearchFilesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchFilesCompleted(this, new SearchFilesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchFilesAsync(string url, string searchPath, string keyWord) {
            this.SearchFilesAsync(url, searchPath, keyWord, null);
        }
        
        public void SearchFilesAsync(string url, string searchPath, string keyWord, object userState) {
            if ((this.onBeginSearchFilesDelegate == null)) {
                this.onBeginSearchFilesDelegate = new BeginOperationDelegate(this.OnBeginSearchFiles);
            }
            if ((this.onEndSearchFilesDelegate == null)) {
                this.onEndSearchFilesDelegate = new EndOperationDelegate(this.OnEndSearchFiles);
            }
            if ((this.onSearchFilesCompletedDelegate == null)) {
                this.onSearchFilesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchFilesCompleted);
            }
            base.InvokeAsync(this.onBeginSearchFilesDelegate, new object[] {
                        url,
                        searchPath,
                        keyWord}, this.onEndSearchFilesDelegate, this.onSearchFilesCompletedDelegate, userState);
        }
    }
}
