//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConferenceModel.ConferenceAudioWebservice {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ConferenceAudioWebservice.ConferenceAudioWebserviceSoap")]
    public interface ConferenceAudioWebserviceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAll", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ConferenceModel.ConferenceAudioWebservice.ConferenceAudioInitRefleshEntity GetAll(int conferenceID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetAll", ReplyAction="*")]
        System.IAsyncResult BeginGetAll(int conferenceID, System.AsyncCallback callback, object asyncState);
        
        ConferenceModel.ConferenceAudioWebservice.ConferenceAudioInitRefleshEntity EndGetAll(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateOne", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateOne(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity academicReviewItemTransferEntity);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/UpdateOne", ReplyAction="*")]
        System.IAsyncResult BeginUpdateOne(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity academicReviewItemTransferEntity, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateOne(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotifyAudioFileUploadCompleate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void NotifyAudioFileUploadCompleate(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity academicReviewItemTransferEntity);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/NotifyAudioFileUploadCompleate", ReplyAction="*")]
        System.IAsyncResult BeginNotifyAudioFileUploadCompleate(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity academicReviewItemTransferEntity, System.AsyncCallback callback, object asyncState);
        
        void EndNotifyAudioFileUploadCompleate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddOne", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int AddOne(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity academicReviewItemTransferEntity);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AddOne", ReplyAction="*")]
        System.IAsyncResult BeginAddOne(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity academicReviewItemTransferEntity, System.AsyncCallback callback, object asyncState);
        
        int EndAddOne(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteOne", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DeleteOne(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity academicReviewItemTransferEntity);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DeleteOne", ReplyAction="*")]
        System.IAsyncResult BeginDeleteOne(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity academicReviewItemTransferEntity, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteOne(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SettingAudioTransferTxt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SettingAudioTransferTxt(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity conferenceAudioItemTransferEntity);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SettingAudioTransferTxt", ReplyAction="*")]
        System.IAsyncResult BeginSettingAudioTransferTxt(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity conferenceAudioItemTransferEntity, System.AsyncCallback callback, object asyncState);
        
        void EndSettingAudioTransferTxt(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllByMobile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAllByMobile(string strConferenceID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetAllByMobile", ReplyAction="*")]
        System.IAsyncResult BeginGetAllByMobile(string strConferenceID, System.AsyncCallback callback, object asyncState);
        
        string EndGetAllByMobile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddOneByJson", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AddOneByJson(string strConferenceID, string json);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AddOneByJson", ReplyAction="*")]
        System.IAsyncResult BeginAddOneByJson(string strConferenceID, string json, System.AsyncCallback callback, object asyncState);
        
        string EndAddOneByJson(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIMMJson", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetIMMJson(string conferenceName, string author);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetIMMJson", ReplyAction="*")]
        System.IAsyncResult BeginGetIMMJson(string conferenceName, string author, System.AsyncCallback callback, object asyncState);
        
        string EndGetIMMJson(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddOneByJsonIncludeAudio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AddOneByJsonIncludeAudio();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AddOneByJsonIncludeAudio", ReplyAction="*")]
        System.IAsyncResult BeginAddOneByJsonIncludeAudio(System.AsyncCallback callback, object asyncState);
        
        string EndAddOneByJsonIncludeAudio(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ConferenceAudioInitRefleshEntity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ConferenceAudioItemTransferEntity[] academicReviewItemTransferEntity_ObserListField;
        
        private int rootCountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public ConferenceAudioItemTransferEntity[] AcademicReviewItemTransferEntity_ObserList {
            get {
                return this.academicReviewItemTransferEntity_ObserListField;
            }
            set {
                this.academicReviewItemTransferEntity_ObserListField = value;
                this.RaisePropertyChanged("AcademicReviewItemTransferEntity_ObserList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int RootCount {
            get {
                return this.rootCountField;
            }
            set {
                this.rootCountField = value;
                this.RaisePropertyChanged("RootCount");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ConferenceAudioItemTransferEntity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int guidField;
        
        private string messageSendTimeField;
        
        private string messageSendDateField;
        
        private string messageSendNameField;
        
        private string addAuthorField;
        
        private string audioMessageField;
        
        private ConferenceAudioOperationType operationField;
        
        private string audioUrlField;
        
        private string audioFileNameField;
        
        private string iMMTypeField;
        
        private string personalImgField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
                this.RaisePropertyChanged("Guid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string MessageSendTime {
            get {
                return this.messageSendTimeField;
            }
            set {
                this.messageSendTimeField = value;
                this.RaisePropertyChanged("MessageSendTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string MessageSendDate {
            get {
                return this.messageSendDateField;
            }
            set {
                this.messageSendDateField = value;
                this.RaisePropertyChanged("MessageSendDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string MessageSendName {
            get {
                return this.messageSendNameField;
            }
            set {
                this.messageSendNameField = value;
                this.RaisePropertyChanged("MessageSendName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string AddAuthor {
            get {
                return this.addAuthorField;
            }
            set {
                this.addAuthorField = value;
                this.RaisePropertyChanged("AddAuthor");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string AudioMessage {
            get {
                return this.audioMessageField;
            }
            set {
                this.audioMessageField = value;
                this.RaisePropertyChanged("AudioMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public ConferenceAudioOperationType Operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
                this.RaisePropertyChanged("Operation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string AudioUrl {
            get {
                return this.audioUrlField;
            }
            set {
                this.audioUrlField = value;
                this.RaisePropertyChanged("AudioUrl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string AudioFileName {
            get {
                return this.audioFileNameField;
            }
            set {
                this.audioFileNameField = value;
                this.RaisePropertyChanged("AudioFileName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string IMMType {
            get {
                return this.iMMTypeField;
            }
            set {
                this.iMMTypeField = value;
                this.RaisePropertyChanged("IMMType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string PersonalImg {
            get {
                return this.personalImgField;
            }
            set {
                this.personalImgField = value;
                this.RaisePropertyChanged("PersonalImg");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum ConferenceAudioOperationType {
        
        /// <remarks/>
        AddType,
        
        /// <remarks/>
        DeleteType,
        
        /// <remarks/>
        UpdateType,
        
        /// <remarks/>
        UploadCompleateType,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ConferenceAudioWebserviceSoapChannel : ConferenceModel.ConferenceAudioWebservice.ConferenceAudioWebserviceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ConferenceModel.ConferenceAudioWebservice.ConferenceAudioInitRefleshEntity Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ConferenceModel.ConferenceAudioWebservice.ConferenceAudioInitRefleshEntity)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddOneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddOneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllByMobileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllByMobileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddOneByJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddOneByJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetIMMJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIMMJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddOneByJsonIncludeAudioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddOneByJsonIncludeAudioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConferenceAudioWebserviceSoapClient : System.ServiceModel.ClientBase<ConferenceModel.ConferenceAudioWebservice.ConferenceAudioWebserviceSoap>, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioWebserviceSoap {
        
        private BeginOperationDelegate onBeginGetAllDelegate;
        
        private EndOperationDelegate onEndGetAllDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateOneDelegate;
        
        private EndOperationDelegate onEndUpdateOneDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateOneCompletedDelegate;
        
        private BeginOperationDelegate onBeginNotifyAudioFileUploadCompleateDelegate;
        
        private EndOperationDelegate onEndNotifyAudioFileUploadCompleateDelegate;
        
        private System.Threading.SendOrPostCallback onNotifyAudioFileUploadCompleateCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddOneDelegate;
        
        private EndOperationDelegate onEndAddOneDelegate;
        
        private System.Threading.SendOrPostCallback onAddOneCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteOneDelegate;
        
        private EndOperationDelegate onEndDeleteOneDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteOneCompletedDelegate;
        
        private BeginOperationDelegate onBeginSettingAudioTransferTxtDelegate;
        
        private EndOperationDelegate onEndSettingAudioTransferTxtDelegate;
        
        private System.Threading.SendOrPostCallback onSettingAudioTransferTxtCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllByMobileDelegate;
        
        private EndOperationDelegate onEndGetAllByMobileDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllByMobileCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddOneByJsonDelegate;
        
        private EndOperationDelegate onEndAddOneByJsonDelegate;
        
        private System.Threading.SendOrPostCallback onAddOneByJsonCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIMMJsonDelegate;
        
        private EndOperationDelegate onEndGetIMMJsonDelegate;
        
        private System.Threading.SendOrPostCallback onGetIMMJsonCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddOneByJsonIncludeAudioDelegate;
        
        private EndOperationDelegate onEndAddOneByJsonIncludeAudioDelegate;
        
        private System.Threading.SendOrPostCallback onAddOneByJsonIncludeAudioCompletedDelegate;
        
        public ConferenceAudioWebserviceSoapClient() {
        }
        
        public ConferenceAudioWebserviceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConferenceAudioWebserviceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConferenceAudioWebserviceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConferenceAudioWebserviceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetAllCompletedEventArgs> GetAllCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateOneCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> NotifyAudioFileUploadCompleateCompleted;
        
        public event System.EventHandler<AddOneCompletedEventArgs> AddOneCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteOneCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SettingAudioTransferTxtCompleted;
        
        public event System.EventHandler<GetAllByMobileCompletedEventArgs> GetAllByMobileCompleted;
        
        public event System.EventHandler<AddOneByJsonCompletedEventArgs> AddOneByJsonCompleted;
        
        public event System.EventHandler<GetIMMJsonCompletedEventArgs> GetIMMJsonCompleted;
        
        public event System.EventHandler<AddOneByJsonIncludeAudioCompletedEventArgs> AddOneByJsonIncludeAudioCompleted;
        
        public ConferenceModel.ConferenceAudioWebservice.ConferenceAudioInitRefleshEntity GetAll(int conferenceID) {
            return base.Channel.GetAll(conferenceID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAll(int conferenceID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAll(conferenceID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ConferenceModel.ConferenceAudioWebservice.ConferenceAudioInitRefleshEntity EndGetAll(System.IAsyncResult result) {
            return base.Channel.EndGetAll(result);
        }
        
        private System.IAsyncResult OnBeginGetAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int conferenceID = ((int)(inValues[0]));
            return this.BeginGetAll(conferenceID, callback, asyncState);
        }
        
        private object[] OnEndGetAll(System.IAsyncResult result) {
            ConferenceModel.ConferenceAudioWebservice.ConferenceAudioInitRefleshEntity retVal = this.EndGetAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllCompleted(object state) {
            if ((this.GetAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllCompleted(this, new GetAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllAsync(int conferenceID) {
            this.GetAllAsync(conferenceID, null);
        }
        
        public void GetAllAsync(int conferenceID, object userState) {
            if ((this.onBeginGetAllDelegate == null)) {
                this.onBeginGetAllDelegate = new BeginOperationDelegate(this.OnBeginGetAll);
            }
            if ((this.onEndGetAllDelegate == null)) {
                this.onEndGetAllDelegate = new EndOperationDelegate(this.OnEndGetAll);
            }
            if ((this.onGetAllCompletedDelegate == null)) {
                this.onGetAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllDelegate, new object[] {
                        conferenceID}, this.onEndGetAllDelegate, this.onGetAllCompletedDelegate, userState);
        }
        
        public void UpdateOne(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity academicReviewItemTransferEntity) {
            base.Channel.UpdateOne(conferenceID, academicReviewItemTransferEntity);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateOne(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity academicReviewItemTransferEntity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateOne(conferenceID, academicReviewItemTransferEntity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateOne(System.IAsyncResult result) {
            base.Channel.EndUpdateOne(result);
        }
        
        private System.IAsyncResult OnBeginUpdateOne(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int conferenceID = ((int)(inValues[0]));
            ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity academicReviewItemTransferEntity = ((ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity)(inValues[1]));
            return this.BeginUpdateOne(conferenceID, academicReviewItemTransferEntity, callback, asyncState);
        }
        
        private object[] OnEndUpdateOne(System.IAsyncResult result) {
            this.EndUpdateOne(result);
            return null;
        }
        
        private void OnUpdateOneCompleted(object state) {
            if ((this.UpdateOneCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateOneCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateOneAsync(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity academicReviewItemTransferEntity) {
            this.UpdateOneAsync(conferenceID, academicReviewItemTransferEntity, null);
        }
        
        public void UpdateOneAsync(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity academicReviewItemTransferEntity, object userState) {
            if ((this.onBeginUpdateOneDelegate == null)) {
                this.onBeginUpdateOneDelegate = new BeginOperationDelegate(this.OnBeginUpdateOne);
            }
            if ((this.onEndUpdateOneDelegate == null)) {
                this.onEndUpdateOneDelegate = new EndOperationDelegate(this.OnEndUpdateOne);
            }
            if ((this.onUpdateOneCompletedDelegate == null)) {
                this.onUpdateOneCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateOneCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateOneDelegate, new object[] {
                        conferenceID,
                        academicReviewItemTransferEntity}, this.onEndUpdateOneDelegate, this.onUpdateOneCompletedDelegate, userState);
        }
        
        public void NotifyAudioFileUploadCompleate(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity academicReviewItemTransferEntity) {
            base.Channel.NotifyAudioFileUploadCompleate(conferenceID, academicReviewItemTransferEntity);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginNotifyAudioFileUploadCompleate(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity academicReviewItemTransferEntity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNotifyAudioFileUploadCompleate(conferenceID, academicReviewItemTransferEntity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndNotifyAudioFileUploadCompleate(System.IAsyncResult result) {
            base.Channel.EndNotifyAudioFileUploadCompleate(result);
        }
        
        private System.IAsyncResult OnBeginNotifyAudioFileUploadCompleate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int conferenceID = ((int)(inValues[0]));
            ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity academicReviewItemTransferEntity = ((ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity)(inValues[1]));
            return this.BeginNotifyAudioFileUploadCompleate(conferenceID, academicReviewItemTransferEntity, callback, asyncState);
        }
        
        private object[] OnEndNotifyAudioFileUploadCompleate(System.IAsyncResult result) {
            this.EndNotifyAudioFileUploadCompleate(result);
            return null;
        }
        
        private void OnNotifyAudioFileUploadCompleateCompleted(object state) {
            if ((this.NotifyAudioFileUploadCompleateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NotifyAudioFileUploadCompleateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NotifyAudioFileUploadCompleateAsync(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity academicReviewItemTransferEntity) {
            this.NotifyAudioFileUploadCompleateAsync(conferenceID, academicReviewItemTransferEntity, null);
        }
        
        public void NotifyAudioFileUploadCompleateAsync(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity academicReviewItemTransferEntity, object userState) {
            if ((this.onBeginNotifyAudioFileUploadCompleateDelegate == null)) {
                this.onBeginNotifyAudioFileUploadCompleateDelegate = new BeginOperationDelegate(this.OnBeginNotifyAudioFileUploadCompleate);
            }
            if ((this.onEndNotifyAudioFileUploadCompleateDelegate == null)) {
                this.onEndNotifyAudioFileUploadCompleateDelegate = new EndOperationDelegate(this.OnEndNotifyAudioFileUploadCompleate);
            }
            if ((this.onNotifyAudioFileUploadCompleateCompletedDelegate == null)) {
                this.onNotifyAudioFileUploadCompleateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNotifyAudioFileUploadCompleateCompleted);
            }
            base.InvokeAsync(this.onBeginNotifyAudioFileUploadCompleateDelegate, new object[] {
                        conferenceID,
                        academicReviewItemTransferEntity}, this.onEndNotifyAudioFileUploadCompleateDelegate, this.onNotifyAudioFileUploadCompleateCompletedDelegate, userState);
        }
        
        public int AddOne(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity academicReviewItemTransferEntity) {
            return base.Channel.AddOne(conferenceID, academicReviewItemTransferEntity);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddOne(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity academicReviewItemTransferEntity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddOne(conferenceID, academicReviewItemTransferEntity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndAddOne(System.IAsyncResult result) {
            return base.Channel.EndAddOne(result);
        }
        
        private System.IAsyncResult OnBeginAddOne(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int conferenceID = ((int)(inValues[0]));
            ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity academicReviewItemTransferEntity = ((ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity)(inValues[1]));
            return this.BeginAddOne(conferenceID, academicReviewItemTransferEntity, callback, asyncState);
        }
        
        private object[] OnEndAddOne(System.IAsyncResult result) {
            int retVal = this.EndAddOne(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddOneCompleted(object state) {
            if ((this.AddOneCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddOneCompleted(this, new AddOneCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddOneAsync(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity academicReviewItemTransferEntity) {
            this.AddOneAsync(conferenceID, academicReviewItemTransferEntity, null);
        }
        
        public void AddOneAsync(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity academicReviewItemTransferEntity, object userState) {
            if ((this.onBeginAddOneDelegate == null)) {
                this.onBeginAddOneDelegate = new BeginOperationDelegate(this.OnBeginAddOne);
            }
            if ((this.onEndAddOneDelegate == null)) {
                this.onEndAddOneDelegate = new EndOperationDelegate(this.OnEndAddOne);
            }
            if ((this.onAddOneCompletedDelegate == null)) {
                this.onAddOneCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddOneCompleted);
            }
            base.InvokeAsync(this.onBeginAddOneDelegate, new object[] {
                        conferenceID,
                        academicReviewItemTransferEntity}, this.onEndAddOneDelegate, this.onAddOneCompletedDelegate, userState);
        }
        
        public void DeleteOne(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity academicReviewItemTransferEntity) {
            base.Channel.DeleteOne(conferenceID, academicReviewItemTransferEntity);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteOne(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity academicReviewItemTransferEntity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteOne(conferenceID, academicReviewItemTransferEntity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteOne(System.IAsyncResult result) {
            base.Channel.EndDeleteOne(result);
        }
        
        private System.IAsyncResult OnBeginDeleteOne(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int conferenceID = ((int)(inValues[0]));
            ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity academicReviewItemTransferEntity = ((ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity)(inValues[1]));
            return this.BeginDeleteOne(conferenceID, academicReviewItemTransferEntity, callback, asyncState);
        }
        
        private object[] OnEndDeleteOne(System.IAsyncResult result) {
            this.EndDeleteOne(result);
            return null;
        }
        
        private void OnDeleteOneCompleted(object state) {
            if ((this.DeleteOneCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteOneCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteOneAsync(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity academicReviewItemTransferEntity) {
            this.DeleteOneAsync(conferenceID, academicReviewItemTransferEntity, null);
        }
        
        public void DeleteOneAsync(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity academicReviewItemTransferEntity, object userState) {
            if ((this.onBeginDeleteOneDelegate == null)) {
                this.onBeginDeleteOneDelegate = new BeginOperationDelegate(this.OnBeginDeleteOne);
            }
            if ((this.onEndDeleteOneDelegate == null)) {
                this.onEndDeleteOneDelegate = new EndOperationDelegate(this.OnEndDeleteOne);
            }
            if ((this.onDeleteOneCompletedDelegate == null)) {
                this.onDeleteOneCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteOneCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteOneDelegate, new object[] {
                        conferenceID,
                        academicReviewItemTransferEntity}, this.onEndDeleteOneDelegate, this.onDeleteOneCompletedDelegate, userState);
        }
        
        public void SettingAudioTransferTxt(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity conferenceAudioItemTransferEntity) {
            base.Channel.SettingAudioTransferTxt(conferenceID, conferenceAudioItemTransferEntity);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSettingAudioTransferTxt(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity conferenceAudioItemTransferEntity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSettingAudioTransferTxt(conferenceID, conferenceAudioItemTransferEntity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSettingAudioTransferTxt(System.IAsyncResult result) {
            base.Channel.EndSettingAudioTransferTxt(result);
        }
        
        private System.IAsyncResult OnBeginSettingAudioTransferTxt(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int conferenceID = ((int)(inValues[0]));
            ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity conferenceAudioItemTransferEntity = ((ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity)(inValues[1]));
            return this.BeginSettingAudioTransferTxt(conferenceID, conferenceAudioItemTransferEntity, callback, asyncState);
        }
        
        private object[] OnEndSettingAudioTransferTxt(System.IAsyncResult result) {
            this.EndSettingAudioTransferTxt(result);
            return null;
        }
        
        private void OnSettingAudioTransferTxtCompleted(object state) {
            if ((this.SettingAudioTransferTxtCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SettingAudioTransferTxtCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SettingAudioTransferTxtAsync(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity conferenceAudioItemTransferEntity) {
            this.SettingAudioTransferTxtAsync(conferenceID, conferenceAudioItemTransferEntity, null);
        }
        
        public void SettingAudioTransferTxtAsync(int conferenceID, ConferenceModel.ConferenceAudioWebservice.ConferenceAudioItemTransferEntity conferenceAudioItemTransferEntity, object userState) {
            if ((this.onBeginSettingAudioTransferTxtDelegate == null)) {
                this.onBeginSettingAudioTransferTxtDelegate = new BeginOperationDelegate(this.OnBeginSettingAudioTransferTxt);
            }
            if ((this.onEndSettingAudioTransferTxtDelegate == null)) {
                this.onEndSettingAudioTransferTxtDelegate = new EndOperationDelegate(this.OnEndSettingAudioTransferTxt);
            }
            if ((this.onSettingAudioTransferTxtCompletedDelegate == null)) {
                this.onSettingAudioTransferTxtCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSettingAudioTransferTxtCompleted);
            }
            base.InvokeAsync(this.onBeginSettingAudioTransferTxtDelegate, new object[] {
                        conferenceID,
                        conferenceAudioItemTransferEntity}, this.onEndSettingAudioTransferTxtDelegate, this.onSettingAudioTransferTxtCompletedDelegate, userState);
        }
        
        public string GetAllByMobile(string strConferenceID) {
            return base.Channel.GetAllByMobile(strConferenceID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllByMobile(string strConferenceID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllByMobile(strConferenceID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetAllByMobile(System.IAsyncResult result) {
            return base.Channel.EndGetAllByMobile(result);
        }
        
        private System.IAsyncResult OnBeginGetAllByMobile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strConferenceID = ((string)(inValues[0]));
            return this.BeginGetAllByMobile(strConferenceID, callback, asyncState);
        }
        
        private object[] OnEndGetAllByMobile(System.IAsyncResult result) {
            string retVal = this.EndGetAllByMobile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllByMobileCompleted(object state) {
            if ((this.GetAllByMobileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllByMobileCompleted(this, new GetAllByMobileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllByMobileAsync(string strConferenceID) {
            this.GetAllByMobileAsync(strConferenceID, null);
        }
        
        public void GetAllByMobileAsync(string strConferenceID, object userState) {
            if ((this.onBeginGetAllByMobileDelegate == null)) {
                this.onBeginGetAllByMobileDelegate = new BeginOperationDelegate(this.OnBeginGetAllByMobile);
            }
            if ((this.onEndGetAllByMobileDelegate == null)) {
                this.onEndGetAllByMobileDelegate = new EndOperationDelegate(this.OnEndGetAllByMobile);
            }
            if ((this.onGetAllByMobileCompletedDelegate == null)) {
                this.onGetAllByMobileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllByMobileCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllByMobileDelegate, new object[] {
                        strConferenceID}, this.onEndGetAllByMobileDelegate, this.onGetAllByMobileCompletedDelegate, userState);
        }
        
        public string AddOneByJson(string strConferenceID, string json) {
            return base.Channel.AddOneByJson(strConferenceID, json);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddOneByJson(string strConferenceID, string json, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddOneByJson(strConferenceID, json, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndAddOneByJson(System.IAsyncResult result) {
            return base.Channel.EndAddOneByJson(result);
        }
        
        private System.IAsyncResult OnBeginAddOneByJson(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strConferenceID = ((string)(inValues[0]));
            string json = ((string)(inValues[1]));
            return this.BeginAddOneByJson(strConferenceID, json, callback, asyncState);
        }
        
        private object[] OnEndAddOneByJson(System.IAsyncResult result) {
            string retVal = this.EndAddOneByJson(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddOneByJsonCompleted(object state) {
            if ((this.AddOneByJsonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddOneByJsonCompleted(this, new AddOneByJsonCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddOneByJsonAsync(string strConferenceID, string json) {
            this.AddOneByJsonAsync(strConferenceID, json, null);
        }
        
        public void AddOneByJsonAsync(string strConferenceID, string json, object userState) {
            if ((this.onBeginAddOneByJsonDelegate == null)) {
                this.onBeginAddOneByJsonDelegate = new BeginOperationDelegate(this.OnBeginAddOneByJson);
            }
            if ((this.onEndAddOneByJsonDelegate == null)) {
                this.onEndAddOneByJsonDelegate = new EndOperationDelegate(this.OnEndAddOneByJson);
            }
            if ((this.onAddOneByJsonCompletedDelegate == null)) {
                this.onAddOneByJsonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddOneByJsonCompleted);
            }
            base.InvokeAsync(this.onBeginAddOneByJsonDelegate, new object[] {
                        strConferenceID,
                        json}, this.onEndAddOneByJsonDelegate, this.onAddOneByJsonCompletedDelegate, userState);
        }
        
        public string GetIMMJson(string conferenceName, string author) {
            return base.Channel.GetIMMJson(conferenceName, author);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetIMMJson(string conferenceName, string author, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIMMJson(conferenceName, author, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetIMMJson(System.IAsyncResult result) {
            return base.Channel.EndGetIMMJson(result);
        }
        
        private System.IAsyncResult OnBeginGetIMMJson(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string conferenceName = ((string)(inValues[0]));
            string author = ((string)(inValues[1]));
            return this.BeginGetIMMJson(conferenceName, author, callback, asyncState);
        }
        
        private object[] OnEndGetIMMJson(System.IAsyncResult result) {
            string retVal = this.EndGetIMMJson(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetIMMJsonCompleted(object state) {
            if ((this.GetIMMJsonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIMMJsonCompleted(this, new GetIMMJsonCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIMMJsonAsync(string conferenceName, string author) {
            this.GetIMMJsonAsync(conferenceName, author, null);
        }
        
        public void GetIMMJsonAsync(string conferenceName, string author, object userState) {
            if ((this.onBeginGetIMMJsonDelegate == null)) {
                this.onBeginGetIMMJsonDelegate = new BeginOperationDelegate(this.OnBeginGetIMMJson);
            }
            if ((this.onEndGetIMMJsonDelegate == null)) {
                this.onEndGetIMMJsonDelegate = new EndOperationDelegate(this.OnEndGetIMMJson);
            }
            if ((this.onGetIMMJsonCompletedDelegate == null)) {
                this.onGetIMMJsonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIMMJsonCompleted);
            }
            base.InvokeAsync(this.onBeginGetIMMJsonDelegate, new object[] {
                        conferenceName,
                        author}, this.onEndGetIMMJsonDelegate, this.onGetIMMJsonCompletedDelegate, userState);
        }
        
        public string AddOneByJsonIncludeAudio() {
            return base.Channel.AddOneByJsonIncludeAudio();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddOneByJsonIncludeAudio(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddOneByJsonIncludeAudio(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndAddOneByJsonIncludeAudio(System.IAsyncResult result) {
            return base.Channel.EndAddOneByJsonIncludeAudio(result);
        }
        
        private System.IAsyncResult OnBeginAddOneByJsonIncludeAudio(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAddOneByJsonIncludeAudio(callback, asyncState);
        }
        
        private object[] OnEndAddOneByJsonIncludeAudio(System.IAsyncResult result) {
            string retVal = this.EndAddOneByJsonIncludeAudio(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddOneByJsonIncludeAudioCompleted(object state) {
            if ((this.AddOneByJsonIncludeAudioCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddOneByJsonIncludeAudioCompleted(this, new AddOneByJsonIncludeAudioCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddOneByJsonIncludeAudioAsync() {
            this.AddOneByJsonIncludeAudioAsync(null);
        }
        
        public void AddOneByJsonIncludeAudioAsync(object userState) {
            if ((this.onBeginAddOneByJsonIncludeAudioDelegate == null)) {
                this.onBeginAddOneByJsonIncludeAudioDelegate = new BeginOperationDelegate(this.OnBeginAddOneByJsonIncludeAudio);
            }
            if ((this.onEndAddOneByJsonIncludeAudioDelegate == null)) {
                this.onEndAddOneByJsonIncludeAudioDelegate = new EndOperationDelegate(this.OnEndAddOneByJsonIncludeAudio);
            }
            if ((this.onAddOneByJsonIncludeAudioCompletedDelegate == null)) {
                this.onAddOneByJsonIncludeAudioCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddOneByJsonIncludeAudioCompleted);
            }
            base.InvokeAsync(this.onBeginAddOneByJsonIncludeAudioDelegate, null, this.onEndAddOneByJsonIncludeAudioDelegate, this.onAddOneByJsonIncludeAudioCompletedDelegate, userState);
        }
    }
}
